# your-website-url.com
## https
server {
    listen 443 ssl;

    ssl_certificate         /etc/cloudflare/your-website-url.public.pem;
    ssl_certificate_key     /etc/cloudflare/your-website-url.private.key;

    server_name www.your-website-url.com;

    # Only allow Cloudflare IPs
    # include /etc/nginx/conf.d/allow-cloudflare-only.conf;
    ssl_client_certificate /etc/cloudflare/authenticated_origin_pull_ca.pem;
    ssl_verify_client on;

    # Give users the ability to upload beyond the default file size.
    client_max_body_size 32M;

    location / {
        proxy_pass http://your-website-url;
        proxy_redirect   off;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Host $server_name;
    }

    # Route /route to a different Docker container
    location /route {
        proxy_pass http://docker-container-name:port; # Replace with your container's internal network name and port
        proxy_redirect   off;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Host $server_name;
    }
}

## Redirect from your-website-url.com to this www.
server {
    listen 80;
    listen 443;

    ssl_certificate         /etc/cloudflare/your-website-url.public.pem;
    ssl_certificate_key     /etc/cloudflare/your-website-url.private.key;

    server_name your-website-url.com www.your-website-url.com;

    return 301 https://www.your-website-url.com$request_uri;
}
